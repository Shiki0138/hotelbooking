# Production Nginx Configuration for Hotel Booking System
# Optimized for 3D/AR/VR content delivery

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Optimize for high performance
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format for monitoring
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 100m; # Large files for 3D assets
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        application/octet-stream
        model/gltf-binary
        model/gltf+json;

    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=20r/s;
    limit_req_zone $binary_remote_addr zone=assets:10m rate=50r/s;

    # Main server block
    server {
        listen 80;
        listen [::]:80;
        server_name hotel-booking.com www.hotel-booking.com;
        
        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    # HTTPS main server
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name hotel-booking.com www.hotel-booking.com;

        # SSL Configuration
        ssl_certificate /etc/ssl/certs/hotel-booking.com.crt;
        ssl_certificate_key /etc/ssl/certs/hotel-booking.com.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000" always;

        # Security headers
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # WebXR specific headers
        add_header Feature-Policy "xr-spatial-tracking 'self'; accelerometer 'self'; gyroscope 'self'; magnetometer 'self'; camera 'self'" always;
        add_header Permissions-Policy "xr-spatial-tracking=(), accelerometer=(), gyroscope=(), magnetometer=(), camera=()" always;

        # Content Security Policy for WebXR
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob: https:; media-src 'self' blob:; connect-src 'self' wss: https:; worker-src 'self' blob:; frame-src 'none'; object-src 'none';" always;

        # Root location - Next.js frontend
        location / {
            proxy_pass http://frontend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # API routes
        location /api/ {
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://backend:3001;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # API specific timeout
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # WebSocket for real-time updates
        location /ws/ {
            proxy_pass http://websocket:3002;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # WebSocket timeout
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }

        # Static assets with aggressive caching
        location /_next/static/ {
            limit_req zone=assets burst=100 nodelay;
            
            proxy_pass http://frontend:3000;
            proxy_cache_valid 200 1y;
            add_header Cache-Control "public, immutable, max-age=31536000";
            add_header X-Cache-Status $upstream_cache_status;
        }

        # 3D Models and textures
        location ~* \.(glb|gltf|obj|fbx|dae)$ {
            limit_req zone=assets burst=50 nodelay;
            
            root /var/www;
            expires 1y;
            add_header Cache-Control "public, immutable, max-age=31536000";
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
            
            # Handle CORS preflight
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type "text/plain; charset=utf-8";
                add_header Content-Length 0;
                return 204;
            }
        }

        # Texture files with WebP fallback
        location ~* \.(jpg|jpeg|png|webp|avif)$ {
            limit_req zone=assets burst=100 nodelay;
            
            root /var/www;
            expires 1y;
            add_header Cache-Control "public, immutable, max-age=31536000";
            add_header Vary "Accept";
            
            # Try WebP first, then original
            location ~* \.(jpg|jpeg|png)$ {
                try_files $uri.webp $uri =404;
            }
        }

        # Audio files for VR experiences
        location ~* \.(mp3|wav|ogg|m4a)$ {
            limit_req zone=assets burst=50 nodelay;
            
            root /var/www;
            expires 1y;
            add_header Cache-Control "public, immutable, max-age=31536000";
            add_header Access-Control-Allow-Origin "*";
        }

        # Video files for AR previews
        location ~* \.(mp4|webm|ogv)$ {
            limit_req zone=assets burst=20 nodelay;
            
            root /var/www;
            expires 1y;
            add_header Cache-Control "public, immutable, max-age=31536000";
            add_header Access-Control-Allow-Origin "*";
            
            # Range request support for video streaming
            add_header Accept-Ranges bytes;
        }

        # Panorama images (large files)
        location /panorama/ {
            limit_req zone=assets burst=10 nodelay;
            
            root /var/www;
            expires 1y;
            add_header Cache-Control "public, immutable, max-age=31536000";
            
            # Larger buffer for big panorama files
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # Service Worker
        location /sw.js {
            proxy_pass http://frontend:3000;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # Manifest files
        location ~* \.(manifest|webmanifest)$ {
            proxy_pass http://frontend:3000;
            add_header Cache-Control "public, max-age=3600";
            add_header Content-Type "application/manifest+json";
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Robots.txt
        location /robots.txt {
            proxy_pass http://frontend:3000;
            add_header Cache-Control "public, max-age=86400";
        }

        # Sitemap
        location /sitemap.xml {
            proxy_pass http://frontend:3000;
            add_header Cache-Control "public, max-age=86400";
        }

        # Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # CDN subdomain
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name cdn.hotel-booking.com;

        # SSL Configuration (same as main)
        ssl_certificate /etc/ssl/certs/hotel-booking.com.crt;
        ssl_certificate_key /etc/ssl/certs/hotel-booking.com.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
        ssl_prefer_server_ciphers off;

        # CDN-specific headers
        add_header Cache-Control "public, max-age=31536000, immutable";
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        add_header X-Content-Type-Options "nosniff";

        # CDN root
        location / {
            root /var/www/cdn;
            try_files $uri $uri/ =404;
            
            # Aggressive caching for CDN
            expires 1y;
            add_header Cache-Control "public, immutable, max-age=31536000";
        }
    }

    # API subdomain
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.hotel-booking.com;

        # SSL Configuration
        ssl_certificate /etc/ssl/certs/hotel-booking.com.crt;
        ssl_certificate_key /etc/ssl/certs/hotel-booking.com.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
        ssl_prefer_server_ciphers off;

        # API-specific security headers
        add_header X-Frame-Options "DENY";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        
        # CORS for API
        add_header Access-Control-Allow-Origin "https://hotel-booking.com";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
        add_header Access-Control-Allow-Credentials "true";

        # API routes
        location / {
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://backend:3001;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Handle CORS preflight
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "https://hotel-booking.com";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type "text/plain; charset=utf-8";
                add_header Content-Length 0;
                return 204;
            }
        }
    }

    # WebSocket subdomain
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name ws.hotel-booking.com;

        # SSL Configuration
        ssl_certificate /etc/ssl/certs/hotel-booking.com.crt;
        ssl_certificate_key /etc/ssl/certs/hotel-booking.com.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
        ssl_prefer_server_ciphers off;

        location / {
            proxy_pass http://websocket:3002;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }
    }
}