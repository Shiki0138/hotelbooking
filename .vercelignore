# Dependencies - exclude all node_modules everywhere
node_modules
**/node_modules
node_modules/**
frontend/node_modules/**
backend/node_modules/**

# Build cache and output
build/
dist/
.next/
.nuxt/
.cache/
.vite/
*.tsbuildinfo

# Development files
*.map
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Test files
coverage/
.nyc_output/
test/
tests/
__tests__/
*.test.js
*.test.ts
*.spec.js
*.spec.ts

# Documentation
docs/
*.md
!README.md

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store

# Git files
.git/
.gitignore
.gitattributes

# CI/CD
.github/
.gitlab/
.circleci/

# Environment files (Vercel will inject these)
.env
.env.*
!.env.example

# Temporary files
tmp/
temp/
*.tmp
*.temp
*.bak
*.backup

# Archive files
*.zip
*.tar
*.tar.gz
*.tgz
*.rar

# Large assets that aren't needed for deployment
videos/
*.mp4
*.mov
*.avi

# Development scripts
scripts/
*.sh
!vercel-build.sh

# Large directories not needed for deployment
development/
production-config/
api_backup/
logs/
archive/
reports/
specifications/
dictionaries/
templates/

# Package manager files
.npm/
.yarn/
.pnpm-store/
pnpm-lock.yaml
yarn.lock

# Optional: Keep package-lock.json for consistency
# package-lock.json

# Backend specific (if not needed for Vercel Functions)
backend/node_modules/
backend/tests/
backend/docs/
backend/scripts/
backend/.env*

# Frontend dev files
frontend/node_modules/
frontend/coverage/
frontend/tests/
frontend/.env*
!frontend/.env.production

# Logs directory
logs/
*.log

# Database files
*.sqlite
*.db
*.sql

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# Linux
.directory
*~

# Archives created during deployment
*.vercel.tgz
vercel-deploy-*.tgz