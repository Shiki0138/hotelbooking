version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: hotelbooking-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-hotelbooking}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-hotelbooking}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./backend/database/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    networks:
      - hotelbooking-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-hotelbooking}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: hotelbooking-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hotelbooking-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hotelbooking-backend
    ports:
      - "8000:8000"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 8000
      DATABASE_URL: postgresql://${DB_USER:-hotelbooking}:${DB_PASSWORD:-password}@postgres:5432/${DB_NAME:-hotelbooking}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-secret-key}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - hotelbooking-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hotelbooking-frontend
    ports:
      - "8080:8080"
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:8000/api}
      VITE_GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
      VITE_STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - hotelbooking-network
    depends_on:
      - backend
    command: npm run dev -- --host 0.0.0.0 --port 8080

  nginx:
    image: nginx:alpine
    container_name: hotelbooking-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - hotelbooking-network
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
  redis_data:

networks:
  hotelbooking-network:
    driver: bridge