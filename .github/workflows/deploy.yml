name: Deploy to Vercel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Build project
      run: |
        cd frontend
        npm run build
        
    - name: Run tests
      run: |
        cd frontend
        npm run test
        
  deploy-preview:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Build project
      run: |
        cd frontend
        npm run build
        
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
      
    - name: Deploy to Vercel Preview
      run: vercel deploy --token=${{ secrets.VERCEL_TOKEN }}

  deploy-production:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Build project
      run: |
        cd frontend
        npm run build
        
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
      
    - name: Deploy to Vercel Production
      run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}